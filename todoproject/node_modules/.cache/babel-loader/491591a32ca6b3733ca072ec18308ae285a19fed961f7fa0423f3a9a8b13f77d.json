{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bobae\\\\Desktop\\\\project\\\\react\\\\todoproject\\\\src\\\\component\\\\TodoEditor.js\";\nimport { useContext, useRef, useState } from \"react\";\nimport \"./TodoEditor.css\";\nimport { TodoDispatchContext } from \"./App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoEditor = () => {\n  //     const {onCreate} = useContext(TodoDispatchContext);\n  //     const [content, setContent] = useState(\"\");\n  //     //사용자가 입력하는 input 엘리먼트에 접근하기 위한 inputRef를 선언\n  //     const inputRef = useRef();\n  //     //사용자가 입력한 내용을 변경할 때마다 호출되는 onChangeContent 함수 정의\n  //     const onChangeContent = (e) => {\n  //         setContent(e.target.value);\n  //     }; // 사용자가 입력한 내용이 변경될 때마다 호출됨. \n  //     // 이벤트 객체(e)를 받아서 그 안의 target 속성을 통해 입력된 내용을 가져와서 \n  //     // setContent 함수를 사용하여 content 상태를 업데이트함.\n\n  //     //Todo 추가할 때 호출되는 함수\n  //     const onSubmit = () => {\n  //         if(!content) {\n  //             inputRef.current.focus();\n  //             return; //입력된 내용이 없는 경우 입력란에 포커스 이동시키고 함수 종료\n  //         }\n  //         onCreate(content);\n  //         setContent(\"\"); //입력란 비우기\n  //     };\n\n  //     // Enter 키를 눌렀을 때 onSubmit 함수를 호출\n  //     const onKeyDown = (e) => {\n  //         if(e.keyCode === 13){\n  //             onSubmit();\n  //         }\n  //     };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TodoEditor\",\n    children: \"TodoEditor Component\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, this)\n  //             <h4>새로운 Todo 작성하기 ✏️</h4>\n  //             <div className=\"editor_wrapper\">\n  //                 {/* Todo를 입력하는 input 엘리먼트 렌더링\n  //                     사용자 입력 및 변경 사항이 onChangeContent 함수에 의해 관리됨 */}\n  //                 <input ref={inputRef} value={content} \n  //                 onChange={onChangeContent} onKeyDown={onKeyDown} \n  //                 placeholder=\"새로운 Todo...\" />\n  //                 <button onClick={onSubmit}>추가</button>\n  //             </div>\n  //         </div>\n  ;\n};\n_c = TodoEditor;\nexport default TodoEditor;\nvar _c;\n$RefreshReg$(_c, \"TodoEditor\");","map":{"version":3,"names":["useContext","useRef","useState","TodoDispatchContext","jsxDEV","_jsxDEV","TodoEditor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/bobae/Desktop/project/react/todoproject/src/component/TodoEditor.js"],"sourcesContent":["import { useContext, useRef, useState } from \"react\";\r\nimport \"./TodoEditor.css\";\r\nimport { TodoDispatchContext } from \"./App\";\r\n\r\n const TodoEditor = () => {\r\n//     const {onCreate} = useContext(TodoDispatchContext);\r\n//     const [content, setContent] = useState(\"\");\r\n//     //사용자가 입력하는 input 엘리먼트에 접근하기 위한 inputRef를 선언\r\n//     const inputRef = useRef();\r\n//     //사용자가 입력한 내용을 변경할 때마다 호출되는 onChangeContent 함수 정의\r\n//     const onChangeContent = (e) => {\r\n//         setContent(e.target.value);\r\n//     }; // 사용자가 입력한 내용이 변경될 때마다 호출됨. \r\n//     // 이벤트 객체(e)를 받아서 그 안의 target 속성을 통해 입력된 내용을 가져와서 \r\n//     // setContent 함수를 사용하여 content 상태를 업데이트함.\r\n\r\n//     //Todo 추가할 때 호출되는 함수\r\n//     const onSubmit = () => {\r\n//         if(!content) {\r\n//             inputRef.current.focus();\r\n//             return; //입력된 내용이 없는 경우 입력란에 포커스 이동시키고 함수 종료\r\n//         }\r\n//         onCreate(content);\r\n//         setContent(\"\"); //입력란 비우기\r\n//     };\r\n\r\n//     // Enter 키를 눌렀을 때 onSubmit 함수를 호출\r\n//     const onKeyDown = (e) => {\r\n//         if(e.keyCode === 13){\r\n//             onSubmit();\r\n//         }\r\n//     };\r\n\r\n     return (\r\n         <div className=\"TodoEditor\">TodoEditor Component</div>\r\n//             <h4>새로운 Todo 작성하기 ✏️</h4>\r\n//             <div className=\"editor_wrapper\">\r\n//                 {/* Todo를 입력하는 input 엘리먼트 렌더링\r\n//                     사용자 입력 및 변경 사항이 onChangeContent 함수에 의해 관리됨 */}\r\n//                 <input ref={inputRef} value={content} \r\n//                 onChange={onChangeContent} onKeyDown={onKeyDown} \r\n//                 placeholder=\"새로운 Todo...\" />\r\n//                 <button onClick={onSubmit}>추가</button>\r\n//             </div>\r\n//         </div>\r\n     );\r\n };\r\n export default TodoEditor;"],"mappings":";AAAA,SAASA,UAAU,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACpD,OAAO,kBAAkB;AACzB,SAASC,mBAAmB,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAC1B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEK,oBACID,OAAA;IAAKE,SAAS,EAAC,YAAY;IAAAC,QAAA,EAAC;EAAoB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK;EAC9D;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAEC,CAAC;AAACC,EAAA,GA1CIP,UAAU;AA2ChB,eAAeA,UAAU;AAAC,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}