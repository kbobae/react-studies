{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bobae\\\\Desktop\\\\project\\\\react\\\\todoproject\\\\src\\\\component\\\\TodoEditor.js\",\n  _s = $RefreshSig$();\nimport { useContext, useRef, useState } from \"react\";\nimport \"./TodoEditor.css\";\nimport { TodoDispatchContext } from \"./App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoEditor = () => {\n  _s();\n  const {\n    onCreate\n  } = useContext(TodoContext);\n  const [content, setContent] = useState(\"\");\n  //사용자가 입력하는 input 엘리먼트에 접근하기 위한 inputRef를 선언\n  const inputRef = useRef();\n  //사용자가 입력한 내용을 변경할 때마다 호출되는 onChangeContent 함수 정의\n  const onChangeContent = e => {\n    setContent(e.target.value);\n  }; // 사용자가 입력한 내용이 변경될 때마다 호출됨. \n  // 이벤트 객체(e)를 받아서 그 안의 target 속성을 통해 입력된 내용을 가져와서 \n  // setContent 함수를 사용하여 content 상태를 업데이트함.\n\n  //Todo 추가할 때 호출되는 함수\n  const onSubmit = () => {\n    if (!content) {\n      inputRef.current.focus();\n      return; //입력된 내용이 없는 경우 입력란에 포커스 이동시키고 함수 종료\n    }\n    onCreate(content);\n    setContent(\"\"); //입력란 비우기\n  };\n\n  // Enter 키를 눌렀을 때 onSubmit 함수를 호출\n  const onKeyDown = e => {\n    if (e.keyCode === 13) {\n      onSubmit();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TodoEditor\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"\\uC0C8\\uB85C\\uC6B4 Todo \\uC791\\uC131\\uD558\\uAE30 \\u270F\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor_wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        value: content,\n        onChange: onChangeContent,\n        onKeyDown: onKeyDown,\n        placeholder: \"\\uC0C8\\uB85C\\uC6B4 Todo...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSubmit,\n        children: \"\\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoEditor, \"8EfcK9H5/3+EZoikfD6klyn6KmM=\");\n_c = TodoEditor;\nexport default TodoEditor;\nvar _c;\n$RefreshReg$(_c, \"TodoEditor\");","map":{"version":3,"names":["useContext","useRef","useState","TodoDispatchContext","jsxDEV","_jsxDEV","TodoEditor","_s","onCreate","TodoContext","content","setContent","inputRef","onChangeContent","e","target","value","onSubmit","current","focus","onKeyDown","keyCode","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/bobae/Desktop/project/react/todoproject/src/component/TodoEditor.js"],"sourcesContent":["import { useContext, useRef, useState } from \"react\";\r\nimport \"./TodoEditor.css\";\r\nimport { TodoDispatchContext } from \"./App\";\r\n\r\nconst TodoEditor = () => {\r\n    const {onCreate} = useContext(TodoContext);\r\n    const [content, setContent] = useState(\"\");\r\n    //사용자가 입력하는 input 엘리먼트에 접근하기 위한 inputRef를 선언\r\n    const inputRef = useRef();\r\n    //사용자가 입력한 내용을 변경할 때마다 호출되는 onChangeContent 함수 정의\r\n    const onChangeContent = (e) => {\r\n        setContent(e.target.value);\r\n    }; // 사용자가 입력한 내용이 변경될 때마다 호출됨. \r\n    // 이벤트 객체(e)를 받아서 그 안의 target 속성을 통해 입력된 내용을 가져와서 \r\n    // setContent 함수를 사용하여 content 상태를 업데이트함.\r\n\r\n    //Todo 추가할 때 호출되는 함수\r\n    const onSubmit = () => {\r\n        if(!content) {\r\n            inputRef.current.focus();\r\n            return; //입력된 내용이 없는 경우 입력란에 포커스 이동시키고 함수 종료\r\n        }\r\n        onCreate(content);\r\n        setContent(\"\"); //입력란 비우기\r\n    };\r\n\r\n    // Enter 키를 눌렀을 때 onSubmit 함수를 호출\r\n    const onKeyDown = (e) => {\r\n        if(e.keyCode === 13){\r\n            onSubmit();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"TodoEditor\">\r\n            <h4>새로운 Todo 작성하기 ✏️</h4>\r\n            <div className=\"editor_wrapper\">\r\n                {/* Todo를 입력하는 input 엘리먼트 렌더링\r\n                    사용자 입력 및 변경 사항이 onChangeContent 함수에 의해 관리됨 */}\r\n                <input ref={inputRef} value={content} \r\n                onChange={onChangeContent} onKeyDown={onKeyDown} \r\n                placeholder=\"새로운 Todo...\" />\r\n                <button onClick={onSubmit}>추가</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default TodoEditor;"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACpD,OAAO,kBAAkB;AACzB,SAASC,mBAAmB,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IAACC;EAAQ,CAAC,GAAGR,UAAU,CAACS,WAAW,CAAC;EAC1C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C;EACA,MAAMU,QAAQ,GAAGX,MAAM,CAAC,CAAC;EACzB;EACA,MAAMY,eAAe,GAAIC,CAAC,IAAK;IAC3BH,UAAU,CAACG,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC,CAAC,CAAC;EACH;EACA;;EAEA;EACA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;IACnB,IAAG,CAACP,OAAO,EAAE;MACTE,QAAQ,CAACM,OAAO,CAACC,KAAK,CAAC,CAAC;MACxB,OAAO,CAAC;IACZ;IACAX,QAAQ,CAACE,OAAO,CAAC;IACjBC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;EACpB,CAAC;;EAED;EACA,MAAMS,SAAS,GAAIN,CAAC,IAAK;IACrB,IAAGA,CAAC,CAACO,OAAO,KAAK,EAAE,EAAC;MAChBJ,QAAQ,CAAC,CAAC;IACd;EACJ,CAAC;EAED,oBACIZ,OAAA;IAAKiB,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACvBlB,OAAA;MAAAkB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBtB,OAAA;MAAKiB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAG3BlB,OAAA;QAAOuB,GAAG,EAAEhB,QAAS;QAACI,KAAK,EAAEN,OAAQ;QACrCmB,QAAQ,EAAEhB,eAAgB;QAACO,SAAS,EAAEA,SAAU;QAChDU,WAAW,EAAC;MAAa;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5BtB,OAAA;QAAQ0B,OAAO,EAAEd,QAAS;QAAAM,QAAA,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACpB,EAAA,CA1CID,UAAU;AAAA0B,EAAA,GAAV1B,UAAU;AA2ChB,eAAeA,UAAU;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}