{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bobae\\\\Desktop\\\\react-studies\\\\todoproject\\\\src\\\\component\\\\TodoEditor.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from \"react\";\nimport \"./TodoEditor.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoEditor = ({\n  onCreate\n}) => {\n  _s();\n  //사용자가 입력 폼에 입력한 데이터를 저장할 State 변수 content를 만듦\n  const [content, setContent] = useState(\"\");\n  const inputRef = useRef();\n  const onChangeContent = e => {\n    setContent(e.target.value);\n  };\n  //함수 onCreate를 호출하고 인수로 content의 값을 전달함\n  const onSubmit = () => {\n    if (!content) {\n      inputRef.current.focus();\n      return; //입력 안했을 때 아이템 추가X, 포커스 상태로\n    }\n    onCreate(content);\n    setContent(\"\"); //새 아이템 추가 후 입력 폼 초기화\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TodoEditor\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"\\uC0C8\\uB85C\\uC6B4 Todo \\uC791\\uC131\\uD558\\uAE30 \\u270F\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor_wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        value: content,\n        onChange: onChangeContent,\n        placeholder: \"\\uC0C8\\uB85C\\uC6B4 Todo...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSubmit,\n        children: \"\\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n};\n_s(TodoEditor, \"F8GkJQbRwpRaMRUzXrR++PPx0mY=\");\n_c = TodoEditor;\nexport default TodoEditor;\nvar _c;\n$RefreshReg$(_c, \"TodoEditor\");","map":{"version":3,"names":["useState","useRef","jsxDEV","_jsxDEV","TodoEditor","onCreate","_s","content","setContent","inputRef","onChangeContent","e","target","value","onSubmit","current","focus","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/bobae/Desktop/react-studies/todoproject/src/component/TodoEditor.js"],"sourcesContent":["import { useState, useRef } from \"react\";\r\nimport \"./TodoEditor.css\";\r\n\r\n const TodoEditor = ({onCreate}) => {\r\n    //사용자가 입력 폼에 입력한 데이터를 저장할 State 변수 content를 만듦\r\n    const [content, setContent] = useState(\"\");\r\n    const inputRef = useRef();\r\n    const onChangeContent = (e) => {\r\n        setContent(e.target.value);\r\n    }\r\n    //함수 onCreate를 호출하고 인수로 content의 값을 전달함\r\n    const onSubmit = () => {\r\n        if(!content) {\r\n            inputRef.current.focus();\r\n            return; //입력 안했을 때 아이템 추가X, 포커스 상태로\r\n        }\r\n        onCreate(content);\r\n        setContent(\"\"); //새 아이템 추가 후 입력 폼 초기화\r\n    }\r\n\r\n     return (\r\n         <div className=\"TodoEditor\">\r\n            <h4>새로운 Todo 작성하기 ✏️</h4>\r\n             <div className=\"editor_wrapper\">\r\n                 <input \r\n                    ref={inputRef}\r\n                    value={content}\r\n                    onChange={onChangeContent}\r\n                    placeholder=\"새로운 Todo...\" />\r\n                 <button onClick={onSubmit}>추가</button>\r\n            </div>\r\n        </div>\r\n     );\r\n };\r\n export default TodoEditor;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACxC,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,UAAU,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAChC;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMS,QAAQ,GAAGR,MAAM,CAAC,CAAC;EACzB,MAAMS,eAAe,GAAIC,CAAC,IAAK;IAC3BH,UAAU,CAACG,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EACD;EACA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;IACnB,IAAG,CAACP,OAAO,EAAE;MACTE,QAAQ,CAACM,OAAO,CAACC,KAAK,CAAC,CAAC;MACxB,OAAO,CAAC;IACZ;IACAX,QAAQ,CAACE,OAAO,CAAC;IACjBC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;EACpB,CAAC;EAEA,oBACIL,OAAA;IAAKc,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACxBf,OAAA;MAAAe,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBnB,OAAA;MAAKc,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC3Bf,OAAA;QACGoB,GAAG,EAAEd,QAAS;QACdI,KAAK,EAAEN,OAAQ;QACfiB,QAAQ,EAAEd,eAAgB;QAC1Be,WAAW,EAAC;MAAa;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/BnB,OAAA;QAAQuB,OAAO,EAAEZ,QAAS;QAAAI,QAAA,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEb,CAAC;AAAChB,EAAA,CA9BIF,UAAU;AAAAuB,EAAA,GAAVvB,UAAU;AA+BhB,eAAeA,UAAU;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}