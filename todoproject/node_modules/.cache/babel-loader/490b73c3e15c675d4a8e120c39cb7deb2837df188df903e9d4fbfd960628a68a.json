{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bobae\\\\Desktop\\\\react-studies\\\\todoproject\\\\src\\\\component\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useCallback, useReducer, useRef } from \"react\";\nimport './App.css';\nimport Header from './Header';\nimport TodoEditor from './TodoEditor';\nimport TodoList from './TodoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockTodo = [{\n  id: 0,\n  isDone: false,\n  content: \"React 공부하기\",\n  createdDate: new Date().getTime()\n}, {\n  id: 1,\n  isDone: false,\n  content: \"독서하기\",\n  createdDate: new Date().getTime()\n}, {\n  id: 2,\n  isDone: false,\n  content: \"영화보기\",\n  createdDate: new Date().getTime()\n}];\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"CREATE\":\n      {\n        return [action.newItem, ...state];\n      }\n    case \"UPDATE\":\n      {\n        return state.map(it => it.id === action.targetId ? {\n          ...it,\n          isDone: !it.isDone\n        } : it);\n      }\n    case \"DELETE\":\n      {\n        return state.filter(it => it.id !== action.targetId);\n      }\n    default:\n      return state;\n  }\n}\n\n//Context는 반드시 컴포넌트 밖에서 생성\n//export를 이용해 TodoContext 내보내기\n// export const TodoContext = React.createContext();\n\nexport const TodoStateContext = /*#__PURE__*/React.createContext();\nexport const TodoDispatchContext = /*#__PURE__*/React.createContext();\nfunction App() {\n  _s();\n  const [todo, dispatch] = useReducer(reducer, mockTodo);\n  const idRef = useRef(3); //목 데이터의 id가 0,1,2 -> 초깃값 3으로 설정\n\n  //새 할 일 아이템을 추가하는 함수\n  const onCreate = content => {\n    dispatch({\n      type: \"CREATE\",\n      newItem: {\n        id: idRef.current,\n        content,\n        isDone: false,\n        createdDate: new Date().getTime()\n      }\n    });\n    idRef.current += 1;\n  };\n\n  //아이템 수정 함수 - 최적화(useCallback으로 메모이제이션)\n  const onUpdate = useCallback(targetId => {\n    dispatch({\n      type: \"UPDATE\",\n      targetId\n    });\n  }, []);\n\n  //아이템 삭제 함수 - 최적화(useCallback으로 메모이제이션)\n  const onDelete = useCallback(targetId => {\n    dispatch({\n      type: \"DELETE\",\n      targetId\n    });\n  }, []);\n  const memoizedDispatches = useMemo(() => {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoStateContext.Provider, {\n      value: todo,\n      children: /*#__PURE__*/_jsxDEV(TodoDispatchContext.Provider, {\n        value: {\n          onCreate,\n          onUpdate,\n          onDelete\n        },\n        children: [/*#__PURE__*/_jsxDEV(TodoEditor, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TodoList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 6\n  }, this);\n}\n_s(App, \"+qKcWZaxeU8z0rO7sJiG4A/lBNs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useMemo","useCallback","useReducer","useRef","Header","TodoEditor","TodoList","jsxDEV","_jsxDEV","mockTodo","id","isDone","content","createdDate","Date","getTime","reducer","state","action","type","newItem","map","it","targetId","filter","TodoStateContext","createContext","TodoDispatchContext","App","_s","todo","dispatch","idRef","onCreate","current","onUpdate","onDelete","memoizedDispatches","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Provider","value","_c","$RefreshReg$"],"sources":["C:/Users/bobae/Desktop/react-studies/todoproject/src/component/App.js"],"sourcesContent":["import React, {useMemo, useCallback, useReducer, useRef} from \"react\";\r\nimport './App.css';\r\nimport Header from './Header';\r\nimport TodoEditor from './TodoEditor';\r\nimport TodoList from './TodoList';\r\n\r\nconst mockTodo = [\r\n  {\r\n    id : 0,\r\n    isDone : false,\r\n    content : \"React 공부하기\",\r\n    createdDate : new Date().getTime(),\r\n  },\r\n  {\r\n    id : 1,\r\n    isDone : false,\r\n    content : \"독서하기\",\r\n    createdDate : new Date().getTime(),\r\n  },\r\n  {\r\n    id : 2,\r\n    isDone : false,\r\n    content : \"영화보기\",\r\n    createdDate : new Date().getTime(),\r\n  },\r\n];\r\n\r\nfunction reducer(state, action) {\r\n  switch(action.type) {\r\n    case \"CREATE\": {\r\n      return [action.newItem, ...state];\r\n    }\r\n    case \"UPDATE\": {\r\n      return state.map((it) =>\r\n        it.id === action.targetId ? {...it, isDone: !it.isDone} : it\r\n      );\r\n    }\r\n    case \"DELETE\": {\r\n      return state.filter((it) => it.id !== action.targetId);\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n//Context는 반드시 컴포넌트 밖에서 생성\r\n//export를 이용해 TodoContext 내보내기\r\n// export const TodoContext = React.createContext();\r\n\r\nexport const TodoStateContext = React.createContext();\r\nexport const TodoDispatchContext = React.createContext();\r\n\r\n function App() {\r\n  const [todo, dispatch] = useReducer(reducer, mockTodo);\r\n\r\n  const idRef = useRef(3); //목 데이터의 id가 0,1,2 -> 초깃값 3으로 설정\r\n\r\n  //새 할 일 아이템을 추가하는 함수\r\n  const onCreate = (content) => {\r\n    dispatch({\r\n      type: \"CREATE\",\r\n      newItem: {\r\n        id: idRef.current,\r\n        content,\r\n        isDone: false,\r\n        createdDate: new Date().getTime(),\r\n      },\r\n    });\r\n    idRef.current += 1;\r\n  };\r\n\r\n  //아이템 수정 함수 - 최적화(useCallback으로 메모이제이션)\r\n  const onUpdate = useCallback((targetId) => {\r\n    dispatch({\r\n      type: \"UPDATE\",\r\n      targetId,\r\n    });\r\n  }, []);\r\n\r\n  //아이템 삭제 함수 - 최적화(useCallback으로 메모이제이션)\r\n  const onDelete = useCallback((targetId) => {\r\n    dispatch({\r\n      type: \"DELETE\",\r\n      targetId,\r\n    });\r\n  }, []);\r\n\r\n  const memoizedDispatches = useMemo(() => {\r\n    \r\n  })\r\n\r\n   return (\r\n     <div className=\"App\">\r\n      <Header />\r\n      <TodoStateContext.Provider value={todo}>\r\n        <TodoDispatchContext.Provider value={{onCreate, onUpdate, onDelete}}>\r\n          <TodoEditor /> \r\n          <TodoList />\r\n        </TodoDispatchContext.Provider>\r\n      </TodoStateContext.Provider>\r\n     </div>\r\n   );\r\n }\r\n\r\n export default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}