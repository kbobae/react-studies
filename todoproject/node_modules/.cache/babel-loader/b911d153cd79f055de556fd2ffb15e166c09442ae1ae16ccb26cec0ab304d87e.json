{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bobae\\\\Desktop\\\\react-studies\\\\todoproject\\\\src\\\\component\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from \"react\";\nimport './App.css';\nimport Header from './Header';\nimport TodoEditor from './TodoEditor';\nimport TodoList from './TodoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockTodo = [{\n  id: 0,\n  isDone: false,\n  content: \"React 공부하기\",\n  createdDate: new Date().getTime()\n}, {\n  id: 1,\n  isDone: false,\n  content: \"독서하기\",\n  createdDate: new Date().getTime()\n}, {\n  id: 2,\n  isDone: false,\n  content: \"영화보기\",\n  createdDate: new Date().getTime()\n}];\nfunction App() {\n  _s();\n  //useState를 이용해 할 일 아이템의 상태를 관리할 State를 만듦\n  const [todo, setTodo] = useState(mockTodo);\n  const idRef = useRef(3); //목 데이터의 id가 0,1,2 -> 초깃값 3으로 설정\n\n  //새 할 일 아이템을 추가하는 함수\n  const onCreate = content => {\n    const newItem = {\n      id: idRef.current,\n      content,\n      isDone: false,\n      createdDate: new Date().getTime()\n    };\n    setTodo([newItem, ...todo]);\n    idRef.current += 1;\n  };\n\n  //아이템 수정 함수\n  const onUpdate = targetId => {\n    setTodo(todo.map(it => it.id === targetId ? {\n      ...it,\n      isDone: !it.isDone\n    } : it));\n  };\n\n  //아이템 삭제 함수\n  const onDelete = targetId => {\n    setTodo(todo.filter(it => it.id !== targetId));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoEditor, {\n      onCreate: onCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todo: todo,\n      onUpdate: onUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 6\n  }, this);\n}\n_s(App, \"kqWr39xoPK0QuE6WnPE5Cus1RrY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useRef","Header","TodoEditor","TodoList","jsxDEV","_jsxDEV","mockTodo","id","isDone","content","createdDate","Date","getTime","App","_s","todo","setTodo","idRef","onCreate","newItem","current","onUpdate","targetId","map","it","onDelete","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/bobae/Desktop/react-studies/todoproject/src/component/App.js"],"sourcesContent":["import {useState, useRef} from \"react\";\nimport './App.css';\nimport Header from './Header';\nimport TodoEditor from './TodoEditor';\nimport TodoList from './TodoList';\n\nconst mockTodo = [\n  {\n    id : 0,\n    isDone : false,\n    content : \"React 공부하기\",\n    createdDate : new Date().getTime(),\n  },\n  {\n    id : 1,\n    isDone : false,\n    content : \"독서하기\",\n    createdDate : new Date().getTime(),\n  },\n  {\n    id : 2,\n    isDone : false,\n    content : \"영화보기\",\n    createdDate : new Date().getTime(),\n  },\n];\n\n function App() {\n  //useState를 이용해 할 일 아이템의 상태를 관리할 State를 만듦\n  const [todo, setTodo] = useState(mockTodo); \n  const idRef = useRef(3); //목 데이터의 id가 0,1,2 -> 초깃값 3으로 설정\n\n  //새 할 일 아이템을 추가하는 함수\n  const onCreate = (content) => {\n    const newItem = {\n      id: idRef.current,\n      content,\n      isDone: false,\n      createdDate: new Date().getTime(),\n    };\n    setTodo([newItem, ...todo]);\n    idRef.current += 1;\n  };\n\n  //아이템 수정 함수\n  const onUpdate = (targetId) => {\n    setTodo(\n      todo.map((it) => \n          it.id === targetId ? {...it,isDone: !it.isDone} : it\n      )\n    );\n  };\n\n  //아이템 삭제 함수\n  const onDelete = (targetId) => {\n    setTodo(todo.filter((it) => it.id !== targetId))\n  }\n\n   return (\n     <div className=\"App\">\n      <Header />\n        <TodoEditor onCreate={onCreate} /> \n        <TodoList todo={todo} onUpdate={onUpdate} />\n     </div>\n   );\n }\n\n export default App;\n"],"mappings":";;AAAA,SAAQA,QAAQ,EAAEC,MAAM,QAAO,OAAO;AACtC,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,QAAQ,GAAG,CACf;EACEC,EAAE,EAAG,CAAC;EACNC,MAAM,EAAG,KAAK;EACdC,OAAO,EAAG,YAAY;EACtBC,WAAW,EAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC;AACnC,CAAC,EACD;EACEL,EAAE,EAAG,CAAC;EACNC,MAAM,EAAG,KAAK;EACdC,OAAO,EAAG,MAAM;EAChBC,WAAW,EAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC;AACnC,CAAC,EACD;EACEL,EAAE,EAAG,CAAC;EACNC,MAAM,EAAG,KAAK;EACdC,OAAO,EAAG,MAAM;EAChBC,WAAW,EAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC;AACnC,CAAC,CACF;AAEA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACd;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAACO,QAAQ,CAAC;EAC1C,MAAMW,KAAK,GAAGjB,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEzB;EACA,MAAMkB,QAAQ,GAAIT,OAAO,IAAK;IAC5B,MAAMU,OAAO,GAAG;MACdZ,EAAE,EAAEU,KAAK,CAACG,OAAO;MACjBX,OAAO;MACPD,MAAM,EAAE,KAAK;MACbE,WAAW,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC;IAClC,CAAC;IACDI,OAAO,CAAC,CAACG,OAAO,EAAE,GAAGJ,IAAI,CAAC,CAAC;IAC3BE,KAAK,CAACG,OAAO,IAAI,CAAC;EACpB,CAAC;;EAED;EACA,MAAMC,QAAQ,GAAIC,QAAQ,IAAK;IAC7BN,OAAO,CACLD,IAAI,CAACQ,GAAG,CAAEC,EAAE,IACRA,EAAE,CAACjB,EAAE,KAAKe,QAAQ,GAAG;MAAC,GAAGE,EAAE;MAAChB,MAAM,EAAE,CAACgB,EAAE,CAAChB;IAAM,CAAC,GAAGgB,EACtD,CACF,CAAC;EACH,CAAC;;EAED;EACA,MAAMC,QAAQ,GAAIH,QAAQ,IAAK;IAC7BN,OAAO,CAACD,IAAI,CAACW,MAAM,CAAEF,EAAE,IAAKA,EAAE,CAACjB,EAAE,KAAKe,QAAQ,CAAC,CAAC;EAClD,CAAC;EAEA,oBACEjB,OAAA;IAAKsB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBACnBvB,OAAA,CAACJ,MAAM;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACR3B,OAAA,CAACH,UAAU;MAACgB,QAAQ,EAAEA;IAAS;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClC3B,OAAA,CAACF,QAAQ;MAACY,IAAI,EAAEA,IAAK;MAACM,QAAQ,EAAEA;IAAS;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEV;AAAClB,EAAA,CAtCQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}